/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_MESSAGE_PB_H_INCLUDED
#define PB_MESSAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(32) ClientCOTRequest_y_t;
typedef struct _ClientCOTRequest {
    pb_size_t Rs_count;
    pb_bytes_array_t **Rs;
    ClientCOTRequest_y_t y; /* 32-byte scalar input */
} ClientCOTRequest;

typedef PB_BYTES_ARRAY_T(64) ServerCOTResponse_c0s_t;
typedef PB_BYTES_ARRAY_T(64) ServerCOTResponse_c1s_t;
typedef struct _ServerCOTResponse {
    pb_size_t c0s_count;
    ServerCOTResponse_c0s_t c0s[32];
    pb_size_t c1s_count;
    ServerCOTResponse_c1s_t c1s[32];
} ServerCOTResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ClientCOTRequest_init_default            {0, NULL, {0, {0}}}
#define ServerCOTResponse_init_default           {0, {{0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}}, 0, {{0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}}}
#define ClientCOTRequest_init_zero               {0, NULL, {0, {0}}}
#define ServerCOTResponse_init_zero              {0, {{0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}}, 0, {{0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}}}

/* Field tags (for use in manual encoding/decoding) */
#define ClientCOTRequest_Rs_tag                  1
#define ClientCOTRequest_y_tag                   2
#define ServerCOTResponse_c0s_tag                1
#define ServerCOTResponse_c1s_tag                2

/* Struct field encoding specification for nanopb */
#define ClientCOTRequest_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, BYTES,    Rs,                1) \
X(a, STATIC,   REQUIRED, BYTES,    y,                 2)
#define ClientCOTRequest_CALLBACK NULL
#define ClientCOTRequest_DEFAULT NULL

#define ServerCOTResponse_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, BYTES,    c0s,               1) \
X(a, STATIC,   REPEATED, BYTES,    c1s,               2)
#define ServerCOTResponse_CALLBACK NULL
#define ServerCOTResponse_DEFAULT NULL

extern const pb_msgdesc_t ClientCOTRequest_msg;
extern const pb_msgdesc_t ServerCOTResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ClientCOTRequest_fields &ClientCOTRequest_msg
#define ServerCOTResponse_fields &ServerCOTResponse_msg

/* Maximum encoded size of messages (where known) */
#define ClientCOTRequest_size                    2146
#define MESSAGE_PB_H_MAX_SIZE                    ServerCOTResponse_size
#define ServerCOTResponse_size                   4224

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
